{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils/index.ts","../node_modules/final-form-calculate/dist/final-form-calculate.es.js","routes/safe/components/Balances/SendModal/screens/ContractInteraction/style.ts"],"names":["useStyles","makeStyles","styles","ContractInteractionReview","onClose","onPrev","tx","explorerUrl","getExplorerInfo","contractAddress","classes","dispatch","useDispatch","safeAddress","extractSafeAddress","nativeCurrency","getNativeCurrency","addressName","useSelector","state","addressBookEntryName","address","useState","txData","txAmount","txRecipient","txInfo","setTxInfo","useEffect","value","toTokenUnit","decimals","data","trim","txValue","txTo","onSubmit","txParameters","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","safeTxGas","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","console","error","onBack","subTitle","title","className","formContainer","margin","color","noMargin","size","style","letterSpacing","align","hash","name","showAvatar","showCopyBtn","xs","alt","height","onError","setImageToPlaceholder","src","getEthAsToken","logoUri","layout","justify","symbol","selectedMethod","inputs","map","index","type","key","generateFormFieldKey","signatureHash","getValueFromTxInputs","outerData","event","img","currentTarget","test","TokenPlaceholder","NO_CONTRACT","ensResolver","createDecorator","field","updates","a","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","resolvedAddress","message","formMutators","setMax","args","utils","changeValue","setContractAddress","setSelectedMethod","lastFormState","values","setCallResults","setAbiValue","isAddress","indexOf","isBoolean","isUint","isInt","isByte","isArrayParameter","parameter","handleSubmitError","hasOwnProperty","undefined","reason","FORM_ERROR","keyType","extractMethodArgs","JSON","parse","Number","isInteger","BigNumber","toString","err","getParsedJSONOrArrayFromString","createTxObject","method","contract","getWeb3","eth","Contract","methods","isReadMethod","action","replace","String","isPromise","obj","then","tripleEquals","b","_len","arguments","length","calculations","Array","_key","form","previousValues","subscribe","_ref","batch","runUpdates","isEqual","next","getIn","previous","results","resolved","Object","keys","forEach","destField","change","result","update","fields","getRegisteredFields","_ref2","matches","isArray","findIndex","f","RegExp","fieldName","createStyles","qrCodeBtn","cursor","padding","md","lg","wordBreak","marginLeft","sm","borderRadius","border","minHeight","overflow","fontSize","fontFamily","maxHeight","fontStretch","lineHeight","buttonRow","justifyContent","gap","dataInput","selectAddress","fullWidth"],"mappings":"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","file":"static/js/60.af17828b.chunk.js","sourcesContent":["import { useEffect, useState, Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getEthAsToken } from 'src/logic/tokens/utils/tokenHelpers'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport {\n  generateFormFieldKey,\n  getValueFromTxInputs,\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\nconst useStyles = makeStyles(styles)\n\nexport type TransactionReviewType = {\n  abi?: string\n  contractAddress?: string\n  data?: string\n  value?: string\n  selectedMethod?: AbiItemExtended\n}\n\ntype Props = {\n  onClose: () => void\n  onPrev: () => void\n  onEditTxParameters: () => void\n  tx: TransactionReviewType\n  txParameters: TxParameters\n}\n\nconst ContractInteractionReview = ({ onClose, onPrev, tx }: Props): React.ReactElement => {\n  const explorerUrl = getExplorerInfo(tx.contractAddress as string)\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const safeAddress = extractSafeAddress()\n  const nativeCurrency = getNativeCurrency()\n  const addressName = useSelector((state) => addressBookEntryName(state, { address: tx.contractAddress as string }))\n\n  const [txInfo, setTxInfo] = useState<{\n    txRecipient: string\n    txData: string\n    txAmount: string\n  }>({ txData: '', txAmount: '', txRecipient: '' })\n\n  useEffect(() => {\n    setTxInfo({\n      txRecipient: tx.contractAddress as string,\n      txAmount: tx.value ? toTokenUnit(tx.value, nativeCurrency.decimals) : '0',\n      txData: tx.data ? tx.data.trim() : '',\n    })\n  }, [tx.contractAddress, tx.value, tx.data, safeAddress, nativeCurrency.decimals])\n\n  const submitTx = (txParameters: TxParameters, delayExecution: boolean) => {\n    if (safeAddress && txInfo) {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: txInfo?.txRecipient,\n          valueInWei: txInfo?.txAmount,\n          txData: txInfo?.txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          delayExecution,\n        }),\n      )\n    } else {\n      console.error('There was an error trying to submit the transaction, the safeAddress was not found')\n    }\n    onClose()\n  }\n\n  return (\n    <TxModalWrapper\n      txData={txInfo?.txData}\n      txValue={txInfo?.txAmount}\n      txTo={txInfo?.txRecipient}\n      onSubmit={submitTx}\n      onBack={onPrev}\n    >\n      <ModalHeader onClose={onClose} subTitle=\"2 of 2\" title=\"Contract interaction\" />\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Contract Address\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <PrefixedEthHashInfo\n            hash={tx.contractAddress as string}\n            name={addressName}\n            showAvatar\n            showCopyBtn\n            explorerUrl={explorerUrl}\n          />\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Value\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col xs={1}>\n            <Img alt=\"Ether\" height={28} onError={setImageToPlaceholder} src={getEthAsToken('0').logoUri || ''} />\n          </Col>\n          <Col layout=\"column\" xs={11}>\n            <Block justify=\"left\">\n              <Paragraph className={classes.value} noMargin size=\"md\" style={{ margin: 0 }}>\n                {tx.value || 0}\n                {' ' + nativeCurrency.symbol}\n              </Paragraph>\n            </Block>\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Method\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Paragraph className={classes.value} size=\"md\" style={{ margin: 0 }}>\n            {tx.selectedMethod?.name}\n          </Paragraph>\n        </Row>\n        {tx.selectedMethod?.inputs?.map(({ name, type }, index) => {\n          const key = generateFormFieldKey(type, tx.selectedMethod?.signatureHash || '', index)\n          const value: string = getValueFromTxInputs(key, type, tx)\n\n          return (\n            <Fragment key={key}>\n              <Row margin=\"xs\">\n                <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                  {name} ({type})\n                </Paragraph>\n              </Row>\n              <Row align=\"center\" margin=\"md\">\n                <Paragraph className={classes.value} noMargin size=\"md\" style={{ margin: 0 }}>\n                  {value}\n                </Paragraph>\n              </Row>\n            </Fragment>\n          )\n        })}\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Data (hex encoded)\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col className={classes.outerData}>\n            <Row className={classes.data} size=\"md\">\n              {tx.data}\n            </Row>\n          </Col>\n        </Row>\n      </Block>\n    </TxModalWrapper>\n  )\n}\n\nexport default ContractInteractionReview\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (event: SyntheticEvent<HTMLImageElement, Event>): void => {\n  const img = event.currentTarget\n  if (!/token_placeholder/.test(img.src)) {\n    img.src = TokenPlaceholder\n  }\n}\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","import { FORM_ERROR, Mutator, SubmissionErrors } from 'final-form'\nimport createDecorator from 'final-form-calculate'\nimport { ContractSendMethod } from 'web3-eth-contract'\n\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { getAddressFromDomain, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { TransactionReviewType } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review'\nimport { isValidCryptoDomainName, isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { BigNumber } from 'bignumber.js'\n\nexport const NO_CONTRACT = 'no contract'\n\nexport const ensResolver = createDecorator({\n  field: 'contractAddress',\n  updates: {\n    contractAddress: async (contractAddress) => {\n      try {\n        const resolvedAddress =\n          (isValidEnsName(contractAddress) || isValidCryptoDomainName(contractAddress)) &&\n          (await getAddressFromDomain(contractAddress))\n\n        if (resolvedAddress) {\n          return resolvedAddress\n        }\n\n        return contractAddress\n      } catch (e) {\n        console.error(e.message)\n        return contractAddress\n      }\n    },\n  },\n})\n\nexport const formMutators: Record<string, Mutator<{ selectedMethod: { name: string } }>> = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'value', () => args[0])\n  },\n  setContractAddress: (args, state, utils) => {\n    utils.changeValue(state, 'contractAddress', () => args[0])\n  },\n  setSelectedMethod: (args, state, utils) => {\n    const modified =\n      state.lastFormState?.values.selectedMethod && state.lastFormState.values.selectedMethod.name !== args[0].name\n\n    if (modified) {\n      utils.changeValue(state, 'callResults', () => '')\n      utils.changeValue(state, 'value', () => '')\n    }\n\n    utils.changeValue(state, 'selectedMethod', () => args[0])\n  },\n  setCallResults: (args, state, utils) => {\n    utils.changeValue(state, 'callResults', () => args[0])\n  },\n  setAbiValue: (args, state, utils) => {\n    utils.changeValue(state, 'abi', () => args[0])\n  },\n}\n\nexport const isAddress = (type: string): boolean => type.indexOf('address') === 0\nexport const isBoolean = (type: string): boolean => type.indexOf('bool') === 0\nexport const isString = (type: string): boolean => type.indexOf('string') === 0\nexport const isUint = (type: string): boolean => type.indexOf('uint') === 0\nexport const isInt = (type: string): boolean => type.indexOf('int') === 0\nexport const isByte = (type: string): boolean => type.indexOf('byte') === 0\n\nexport const isArrayParameter = (parameter: string): boolean => /(\\[\\d*])+$/.test(parameter)\nexport const getParsedJSONOrArrayFromString = (parameter: string): (string | number)[] | null => {\n  try {\n    const arrayResult = JSON.parse(parameter)\n    return arrayResult.map((value) => {\n      if (Number.isInteger(value)) {\n        return new BigNumber(value).toString()\n      }\n      return value\n    })\n  } catch (err) {\n    return null\n  }\n}\n\nexport const handleSubmitError = (error: SubmissionErrors, values: Record<string, string>): Record<string, string> => {\n  for (const key in values) {\n    if (values.hasOwnProperty(key) && error !== undefined && values[key] === error.value) {\n      return { [key]: error.reason }\n    }\n  }\n\n  // .call() failed and we're logging a generic error\n  return { [FORM_ERROR]: error ? error.message : undefined }\n}\n\nexport const generateFormFieldKey = (type: string, signatureHash: string, index: number): string => {\n  const keyType = isArrayParameter(type) ? 'arrayParam' : type\n  return `methodInput-${signatureHash}_${index}_${keyType}`\n}\n\nconst extractMethodArgs =\n  (signatureHash: string, values: Record<string, string>) =>\n  ({ type }, index) => {\n    const key = generateFormFieldKey(type, signatureHash, index)\n\n    return getParsedJSONOrArrayFromString(values[key]) || values[key]\n  }\n\nexport const createTxObject = (\n  method: AbiItemExtended,\n  contractAddress: string,\n  values: Record<string, string>,\n): ContractSendMethod => {\n  const web3 = getWeb3()\n  const contract = new web3.eth.Contract([method], contractAddress)\n  const { inputs, name = '', signatureHash } = method\n  const args = inputs?.map(extractMethodArgs(signatureHash, values)) || []\n\n  return contract.methods[name](...args)\n}\n\nexport const isReadMethod = (method: AbiItemExtended): boolean => method && method.action === 'read'\n\nexport const getValueFromTxInputs = (key: string, type: string, tx: TransactionReviewType): string => {\n  if (isArrayParameter(type)) {\n    key = key.replace('[]', '')\n  }\n\n  let value = tx[key]\n\n  if (type === 'bool') {\n    value = String(value)\n  }\n\n  return value\n}\n","import { getIn } from 'final-form';\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\n//      \n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar createDecorator = function createDecorator() {\n  for (var _len = arguments.length, calculations = new Array(_len), _key = 0; _key < _len; _key++) {\n    calculations[_key] = arguments[_key];\n  }\n\n  return function (form) {\n    var previousValues = {};\n    var unsubscribe = form.subscribe(function (_ref) {\n      var values = _ref.values;\n      form.batch(function () {\n        var runUpdates = function runUpdates(field, isEqual, updates) {\n          var next = values && getIn(values, field);\n          var previous = previousValues && getIn(previousValues, field);\n\n          if (!isEqual(next, previous)) {\n            if (typeof updates === 'function') {\n              var results = updates(next, field, values, previousValues);\n\n              if (isPromise(results)) {\n                results.then(function (resolved) {\n                  Object.keys(resolved).forEach(function (destField) {\n                    form.change(destField, resolved[destField]);\n                  });\n                });\n              } else {\n                Object.keys(results).forEach(function (destField) {\n                  form.change(destField, results[destField]);\n                });\n              }\n            } else {\n              Object.keys(updates).forEach(function (destField) {\n                var update = updates[destField];\n                var result = update(next, values, previousValues);\n\n                if (isPromise(result)) {\n                  result.then(function (resolved) {\n                    form.change(destField, resolved);\n                  });\n                } else {\n                  form.change(destField, result);\n                }\n              });\n            }\n          }\n        };\n\n        var fields = form.getRegisteredFields();\n        calculations.forEach(function (_ref2) {\n          var field = _ref2.field,\n              isEqual = _ref2.isEqual,\n              updates = _ref2.updates;\n\n          if (typeof field === 'string') {\n            runUpdates(field, isEqual || tripleEquals, updates);\n          } else {\n            // field is a either array or regex\n            var matches = Array.isArray(field) ? function (name) {\n              return ~field.indexOf(name) || field.findIndex(function (f) {\n                return f instanceof RegExp && f.test(name);\n              }) !== -1;\n            } : function (name) {\n              return field.test(name);\n            };\n            fields.forEach(function (fieldName) {\n              if (matches(fieldName)) {\n                runUpdates(fieldName, isEqual || tripleEquals, updates);\n              }\n            });\n          }\n        });\n        previousValues = values;\n      });\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  };\n};\n\n//\n\nexport default createDecorator;\n","import { lg, md, sm, border } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    wordBreak: 'break-word',\n  },\n  value: {\n    marginLeft: sm,\n  },\n  outerData: {\n    borderRadius: '5px',\n    border: `1px solid ${border}`,\n    padding: '11px',\n    minHeight: '21px',\n  },\n  data: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n    fontSize: '14px',\n    fontFamily: 'Averta',\n    maxHeight: '100px',\n    letterSpacing: 'normal',\n    fontStretch: 'normal',\n    lineHeight: '1.43',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  dataInput: {\n    '& TextField-root-294': {\n      lineHeight: 'auto',\n      border: 'green',\n    },\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n  fullWidth: {\n    justifyContent: 'space-between',\n  },\n})\n"],"sourceRoot":""}